import{_ as i,c as s,o as t,ae as e}from"./chunks/framework.C_wB2T0D.js";const u=JSON.parse('{"title":"n8n 자동화 가이드","description":"","frontmatter":{},"headers":[],"relativePath":"n8n-guide.md","filePath":"n8n-guide.md"}'),n={name:"n8n-guide.md"};function l(h,a,o,r,p,d){return t(),s("div",null,[...a[0]||(a[0]=[e(`<h1 id="n8n-자동화-가이드" tabindex="-1">n8n 자동화 가이드 <a class="header-anchor" href="#n8n-자동화-가이드" aria-label="Permalink to &quot;n8n 자동화 가이드&quot;">​</a></h1><h2 id="📚-api-기초-이해하기" tabindex="-1">📚 API 기초 이해하기 <a class="header-anchor" href="#📚-api-기초-이해하기" aria-label="Permalink to &quot;📚 API 기초 이해하기&quot;">​</a></h2><h3 id="api란-무엇인가" tabindex="-1">API란 무엇인가? <a class="header-anchor" href="#api란-무엇인가" aria-label="Permalink to &quot;API란 무엇인가?&quot;">​</a></h3><p>**API (Application Programming Interface)**는 서로 다른 애플리케이션 간에 데이터를 주고받을 수 있도록 하는 규약입니다. 마치 레스토랑에서 웨이터가 주방과 손님 사이를 연결하는 것처럼, API는 서로 다른 시스템 간의 중개자 역할을 합니다.</p><h3 id="n8n에서-api-연동이-필요한-경우" tabindex="-1">n8n에서 API 연동이 필요한 경우 <a class="header-anchor" href="#n8n에서-api-연동이-필요한-경우" aria-label="Permalink to &quot;n8n에서 API 연동이 필요한 경우&quot;">​</a></h3><p>n8n은 수많은 서비스에 대한 전용 노드를 제공하지만, 다음과 같은 경우 직접 API 연동이 필요합니다:</p><ul><li><strong>전용 노드가 없는 서비스</strong>: 아직 n8n이 지원하지 않는 새로운 서비스</li><li><strong>회사 내부 시스템</strong>: 자체 개발한 사내 시스템이나 커스텀 솔루션</li><li><strong>특수 목적 API</strong>: 특별한 요구사항이 있는 맞춤형 API</li></ul><p>이런 경우 <strong>HTTP Request 노드</strong>를 사용하여 직접 API를 호출할 수 있습니다.</p><h2 id="🔧-http-request-노드-마스터하기" tabindex="-1">🔧 HTTP Request 노드 마스터하기 <a class="header-anchor" href="#🔧-http-request-노드-마스터하기" aria-label="Permalink to &quot;🔧 HTTP Request 노드 마스터하기&quot;">​</a></h2><h3 id="http-request-노드란" tabindex="-1">HTTP Request 노드란? <a class="header-anchor" href="#http-request-노드란" aria-label="Permalink to &quot;HTTP Request 노드란?&quot;">​</a></h3><p>HTTP Request 노드는 n8n의 가장 강력하고 유연한 노드 중 하나입니다:</p><ul><li>✅ 모든 HTTP API 호출 가능</li><li>✅ GET, POST, PUT, DELETE 등 모든 메소드 지원</li><li>✅ 커스텀 헤더, 인증, 바디 설정 가능</li><li>✅ 테스트 및 디버깅 용이</li></ul><h3 id="주요-http-메소드-이해하기" tabindex="-1">주요 HTTP 메소드 이해하기 <a class="header-anchor" href="#주요-http-메소드-이해하기" aria-label="Permalink to &quot;주요 HTTP 메소드 이해하기&quot;">​</a></h3><h4 id="📖-get-데이터-조회" tabindex="-1">📖 GET - 데이터 조회 <a class="header-anchor" href="#📖-get-데이터-조회" aria-label="Permalink to &quot;📖 GET - 데이터 조회&quot;">​</a></h4><p>정보를 가져올 때 사용합니다.</p><p><strong>사용 예시:</strong></p><ul><li>사용자 목록 조회</li><li>제품 데이터 가져오기</li><li>상태 확인</li></ul><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://api.example.com/users</span></span></code></pre></div><h4 id="✍️-post-데이터-생성" tabindex="-1">✍️ POST - 데이터 생성 <a class="header-anchor" href="#✍️-post-데이터-생성" aria-label="Permalink to &quot;✍️ POST - 데이터 생성&quot;">​</a></h4><p>새로운 데이터를 만들 때 사용합니다.</p><p><strong>사용 예시:</strong></p><ul><li>새 사용자 등록</li><li>댓글 작성</li><li>주문 생성</li></ul><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">POST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://api.example.com/users</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Content-Type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> application/json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;홍길동&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hong@example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="🔄-put-데이터-업데이트" tabindex="-1">🔄 PUT - 데이터 업데이트 <a class="header-anchor" href="#🔄-put-데이터-업데이트" aria-label="Permalink to &quot;🔄 PUT - 데이터 업데이트&quot;">​</a></h4><p>기존 데이터를 수정할 때 사용합니다.</p><p><strong>사용 예시:</strong></p><ul><li>사용자 정보 수정</li><li>제품 정보 업데이트</li><li>설정 변경</li></ul><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PUT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://api.example.com/users/123</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Content-Type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> application/json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;홍길동&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;newemail@example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="🗑️-delete-데이터-삭제" tabindex="-1">🗑️ DELETE - 데이터 삭제 <a class="header-anchor" href="#🗑️-delete-데이터-삭제" aria-label="Permalink to &quot;🗑️ DELETE - 데이터 삭제&quot;">​</a></h4><p>데이터를 제거할 때 사용합니다.</p><p><strong>사용 예시:</strong></p><ul><li>사용자 계정 삭제</li><li>파일 제거</li><li>임시 데이터 정리</li></ul><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://api.example.com/users/123</span></span></code></pre></div><h2 id="💡-api-연동을-위한-실전-팁" tabindex="-1">💡 API 연동을 위한 실전 팁 <a class="header-anchor" href="#💡-api-연동을-위한-실전-팁" aria-label="Permalink to &quot;💡 API 연동을 위한 실전 팁&quot;">​</a></h2><h3 id="연동-전-준비사항" tabindex="-1">연동 전 준비사항 <a class="header-anchor" href="#연동-전-준비사항" aria-label="Permalink to &quot;연동 전 준비사항&quot;">​</a></h3><h4 id="_1-api-문서-철저히-분석하기" tabindex="-1">1. API 문서 철저히 분석하기 <a class="header-anchor" href="#_1-api-문서-철저히-분석하기" aria-label="Permalink to &quot;1. API 문서 철저히 분석하기&quot;">​</a></h4><ul><li>📋 엔드포인트 URL 확인</li><li>🔑 필요한 인증 방식 파악</li><li>📊 요청/응답 형식 이해</li><li>⚠️ 사용량 제한 확인</li></ul><blockquote><p>💡 <strong>Pro Tip</strong>: API 문서가 어렵다면 ChatGPT와 함께 읽어보세요! API 문서 링크를 공유하고 이해가 안 되는 부분을 질문하면 쉽게 설명해줍니다.</p></blockquote><h4 id="_2-샘플-요청-응답-테스트" tabindex="-1">2. 샘플 요청/응답 테스트 <a class="header-anchor" href="#_2-샘플-요청-응답-테스트" aria-label="Permalink to &quot;2. 샘플 요청/응답 테스트&quot;">​</a></h4><p>실제 연동 전에 Postman이나 cURL로 테스트해보세요:</p><ul><li>정상 응답 확인</li><li>에러 응답 형태 파악</li><li>응답 시간 측정</li></ul><h3 id="연동-시-주의사항" tabindex="-1">연동 시 주의사항 <a class="header-anchor" href="#연동-시-주의사항" aria-label="Permalink to &quot;연동 시 주의사항&quot;">​</a></h3><h4 id="🚦-요청-횟수-제한-rate-limiting" tabindex="-1">🚦 요청 횟수 제한 (Rate Limiting) <a class="header-anchor" href="#🚦-요청-횟수-제한-rate-limiting" aria-label="Permalink to &quot;🚦 요청 횟수 제한 (Rate Limiting)&quot;">​</a></h4><p>대부분의 API는 분당/시간당 요청 횟수를 제한합니다:</p><ul><li>제한 초과 시 429 에러 발생</li><li>n8n의 Wait 노드로 속도 조절</li><li>배치 처리 시 특히 주의</li></ul><h4 id="🔒-보안-관리" tabindex="-1">🔒 보안 관리 <a class="header-anchor" href="#🔒-보안-관리" aria-label="Permalink to &quot;🔒 보안 관리&quot;">​</a></h4><ul><li><strong>API 키 관리</strong>: n8n의 Credentials 기능 활용</li><li><strong>민감 데이터</strong>: 로그에 노출되지 않도록 주의</li><li><strong>HTTPS 사용</strong>: 항상 보안 연결 사용</li></ul><h4 id="⚡-성능-최적화" tabindex="-1">⚡ 성능 최적화 <a class="header-anchor" href="#⚡-성능-최적화" aria-label="Permalink to &quot;⚡ 성능 최적화&quot;">​</a></h4><ul><li><strong>타임아웃 설정</strong>: 적절한 응답 시간 설정</li><li><strong>재시도 로직</strong>: 실패 시 자동 재시도 구현</li><li><strong>에러 처리</strong>: Try/Catch 노드로 에러 관리</li></ul><h2 id="🛠️-curl로-api-연동하기" tabindex="-1">🛠️ cURL로 API 연동하기 <a class="header-anchor" href="#🛠️-curl로-api-연동하기" aria-label="Permalink to &quot;🛠️ cURL로 API 연동하기&quot;">​</a></h2><h3 id="curl이란" tabindex="-1">cURL이란? <a class="header-anchor" href="#curl이란" aria-label="Permalink to &quot;cURL이란?&quot;">​</a></h3><p>**cURL (Client URL)**은 명령줄에서 HTTP 요청을 보내는 강력한 도구입니다:</p><ul><li>🌍 모든 운영체제에서 사용 가능</li><li>📚 거의 모든 API 문서에 예제 제공</li><li>🔄 n8n의 HTTP Request 노드로 쉽게 변환 가능</li></ul><h3 id="curl-주요-옵션" tabindex="-1">cURL 주요 옵션 <a class="header-anchor" href="#curl-주요-옵션" aria-label="Permalink to &quot;cURL 주요 옵션&quot;">​</a></h3><table tabindex="0"><thead><tr><th>옵션</th><th>설명</th><th>예시</th></tr></thead><tbody><tr><td><code>-X</code></td><td>HTTP 메소드 지정</td><td><code>-X POST</code></td></tr><tr><td><code>-H</code></td><td>헤더 추가</td><td><code>-H &quot;Content-Type: application/json&quot;</code></td></tr><tr><td><code>-d</code></td><td>데이터 전송</td><td><code>-d &#39;{&quot;key&quot;:&quot;value&quot;}&#39;</code></td></tr><tr><td><code>--data-raw</code></td><td>Raw 데이터 전송</td><td><code>--data-raw &#39;{&quot;name&quot;:&quot;test&quot;}&#39;</code></td></tr><tr><td><code>-u</code></td><td>인증 정보</td><td><code>-u username:password</code></td></tr><tr><td><code>--location</code></td><td>리다이렉트 따라가기</td><td><code>--location</code></td></tr></tbody></table><h3 id="curl을-n8n으로-변환하기" tabindex="-1">cURL을 n8n으로 변환하기 <a class="header-anchor" href="#curl을-n8n으로-변환하기" aria-label="Permalink to &quot;cURL을 n8n으로 변환하기&quot;">​</a></h3><p>n8n은 cURL 명령을 직접 가져올 수 있는 기능을 제공합니다:</p><ol><li>HTTP Request 노드 추가</li><li>&quot;Import cURL&quot; 버튼 클릭</li><li>cURL 명령 붙여넣기</li><li>자동 변환 완료!</li></ol><h2 id="🤖-실습-chatgpt-api-연동하기" tabindex="-1">🤖 실습: ChatGPT API 연동하기 <a class="header-anchor" href="#🤖-실습-chatgpt-api-연동하기" aria-label="Permalink to &quot;🤖 실습: ChatGPT API 연동하기&quot;">​</a></h2><h3 id="step-1-api-key-발급" tabindex="-1">Step 1: API Key 발급 <a class="header-anchor" href="#step-1-api-key-발급" aria-label="Permalink to &quot;Step 1: API Key 발급&quot;">​</a></h3><ol><li><a href="https://platform.openai.com" target="_blank" rel="noreferrer">OpenAI Platform</a> 접속</li><li>API Keys 메뉴 선택</li><li>&quot;Create new secret key&quot; 클릭</li><li>키 안전하게 보관</li></ol><h3 id="step-2-n8n에서-chatgpt-전용-노드-사용" tabindex="-1">Step 2: n8n에서 ChatGPT 전용 노드 사용 <a class="header-anchor" href="#step-2-n8n에서-chatgpt-전용-노드-사용" aria-label="Permalink to &quot;Step 2: n8n에서 ChatGPT 전용 노드 사용&quot;">​</a></h3><p>n8n은 OpenAI를 위한 전용 노드를 제공합니다:</p><ol><li><strong>OpenAI 노드 추가</strong></li><li><strong>Credentials 설정</strong>: API Key 입력</li><li><strong>Operation 선택</strong>: Chat, Completion, Image 등</li><li><strong>Parameters 설정</strong>: <ul><li>Model: gpt-3.5-turbo 또는 gpt-4</li><li>Temperature: 창의성 조절 (0-2)</li><li>Max Tokens: 응답 길이 제한</li></ul></li></ol><h3 id="step-3-http-request-노드로-직접-연동" tabindex="-1">Step 3: HTTP Request 노드로 직접 연동 <a class="header-anchor" href="#step-3-http-request-노드로-직접-연동" aria-label="Permalink to &quot;Step 3: HTTP Request 노드로 직접 연동&quot;">​</a></h3><p>cURL 명령을 사용한 직접 연동:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://api.openai.com/v1/chat/completions</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Content-Type: application/json&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Authorization: Bearer YOUR_API_KEY&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;model&quot;: &quot;gpt-3.5-turbo&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;messages&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;role&quot;: &quot;user&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;content&quot;: &quot;안녕하세요!&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;temperature&quot;: 0.7</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  }&#39;</span></span></code></pre></div><p>이 cURL 명령을 n8n의 HTTP Request 노드에서 Import cURL 기능으로 가져오면 자동으로 설정됩니다.</p><h2 id="📝-워크플로우-예제" tabindex="-1">📝 워크플로우 예제 <a class="header-anchor" href="#📝-워크플로우-예제" aria-label="Permalink to &quot;📝 워크플로우 예제&quot;">​</a></h2><h3 id="간단한-api-연동-워크플로우" tabindex="-1">간단한 API 연동 워크플로우 <a class="header-anchor" href="#간단한-api-연동-워크플로우" aria-label="Permalink to &quot;간단한 API 연동 워크플로우&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[Manual Trigger] → [HTTP Request] → [Set] → [Response]</span></span></code></pre></div><ol><li><strong>Manual Trigger</strong>: 수동으로 워크플로우 시작</li><li><strong>HTTP Request</strong>: API 호출</li><li><strong>Set</strong>: 응답 데이터 가공</li><li><strong>Response</strong>: 결과 반환</li></ol><h3 id="에러-처리가-포함된-워크플로우" tabindex="-1">에러 처리가 포함된 워크플로우 <a class="header-anchor" href="#에러-처리가-포함된-워크플로우" aria-label="Permalink to &quot;에러 처리가 포함된 워크플로우&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[Trigger] → [Try] → [HTTP Request] → [Success Path]</span></span>
<span class="line"><span>                 ↓</span></span>
<span class="line"><span>            [Catch] → [Error Handler] → [Notification]</span></span></code></pre></div><h2 id="🎯-다음-단계" tabindex="-1">🎯 다음 단계 <a class="header-anchor" href="#🎯-다음-단계" aria-label="Permalink to &quot;🎯 다음 단계&quot;">​</a></h2><p>API 연동의 기초를 마스터했다면:</p><ol><li><strong>Webhook 활용하기</strong>: 외부 서비스에서 n8n 트리거</li><li><strong>인증 방식 깊이 알기</strong>: OAuth2, JWT 등</li><li><strong>복잡한 워크플로우 구성</strong>: 다중 API 연동</li><li><strong>에러 처리 고도화</strong>: 재시도, 폴백 전략</li></ol><h2 id="📚-추가-학습-자료" tabindex="-1">📚 추가 학습 자료 <a class="header-anchor" href="#📚-추가-학습-자료" aria-label="Permalink to &quot;📚 추가 학습 자료&quot;">​</a></h2><ul><li><a href="https://docs.n8n.io" target="_blank" rel="noreferrer">n8n 공식 문서</a></li><li><a href="https://docs.n8n.io/nodes/n8n-nodes-base.httpRequest" target="_blank" rel="noreferrer">HTTP Request 노드 가이드</a></li><li><a href="https://docs.n8n.io/courses/level-two/" target="_blank" rel="noreferrer">API 연동 베스트 프랙티스</a></li></ul><hr><p><em>이 가이드는 지속적으로 업데이트됩니다. 질문이나 제안사항이 있으시면 언제든 문의해주세요!</em></p>`,81)])])}const k=i(n,[["render",l]]);export{u as __pageData,k as default};
